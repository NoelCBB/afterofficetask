<?xml version="1.0" encoding="UTF-8"?>
<testng-results retried="2" ignored="0" total="16" passed="13" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-11-24T21:32:52 WIB" name="Annotation Execution Suite" finished-at="2024-11-24T21:32:52 WIB" duration-ms="40">
    <groups>
      <group name="group2">
        <method signature="TestNG.scenarioTestGroup2()[pri:0, instance:TestNG@747edf66]" name="scenarioTestGroup2" class="TestNG"/>
      </group> <!-- group2 -->
      <group name="group1">
        <method signature="TestNG.scenarioTestGroup1()[pri:0, instance:TestNG@747edf66]" name="scenarioTestGroup1" class="TestNG"/>
      </group> <!-- group1 -->
    </groups>
    <test started-at="2024-11-24T21:32:52 WIB" name="MyTestGroup" finished-at="2024-11-24T21:32:52 WIB" duration-ms="40">
      <class name="TestNG">
        <test-method is-config="true" signature="setUpMethod()[pri:0, instance:TestNG@747edf66]" started-at="2024-11-24T21:32:52 WIB" name="setUpMethod" finished-at="2024-11-24T21:32:52 WIB" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMethod -->
        <test-method is-config="true" signature="setUpClass()[pri:0, instance:TestNG@747edf66]" started-at="2024-11-24T21:32:52 WIB" name="setUpClass" finished-at="2024-11-24T21:32:52 WIB" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="dependMethod()[pri:0, instance:TestNG@747edf66]" started-at="2024-11-24T21:32:52 WIB" name="dependMethod" finished-at="2024-11-24T21:32:52 WIB" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dependMethod -->
        <test-method is-config="true" signature="setUpMethod()[pri:0, instance:TestNG@747edf66]" started-at="2024-11-24T21:32:52 WIB" name="setUpMethod" finished-at="2024-11-24T21:32:52 WIB" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:TestNG@747edf66]" started-at="2024-11-24T21:32:52 WIB" name="afterMethod" finished-at="2024-11-24T21:32:52 WIB" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="scenarioTest1()[pri:0, instance:TestNG@747edf66]" started-at="2024-11-24T21:32:52 WIB" name="scenarioTest1" finished-at="2024-11-24T21:32:52 WIB" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- scenarioTest1 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:TestNG@747edf66]" started-at="2024-11-24T21:32:52 WIB" name="afterMethod" finished-at="2024-11-24T21:32:52 WIB" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setUpMethod()[pri:0, instance:TestNG@747edf66]" started-at="2024-11-24T21:32:52 WIB" name="setUpMethod" finished-at="2024-11-24T21:32:52 WIB" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMethod -->
        <test-method signature="scenarioTestGroup1()[pri:0, instance:TestNG@747edf66]" started-at="2024-11-24T21:32:52 WIB" name="scenarioTestGroup1" finished-at="2024-11-24T21:32:52 WIB" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- scenarioTestGroup1 -->
        <test-method is-config="true" signature="setUpMethod()[pri:0, instance:TestNG@747edf66]" started-at="2024-11-24T21:32:52 WIB" name="setUpMethod" finished-at="2024-11-24T21:32:52 WIB" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMethod -->
        <test-method signature="scenarioTestGroup2()[pri:0, instance:TestNG@747edf66]" started-at="2024-11-24T21:32:52 WIB" name="scenarioTestGroup2" finished-at="2024-11-24T21:32:52 WIB" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- scenarioTestGroup2 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:TestNG@747edf66]" started-at="2024-11-24T21:32:52 WIB" name="afterMethod" finished-at="2024-11-24T21:32:52 WIB" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:TestNG@747edf66]" started-at="2024-11-24T21:32:52 WIB" name="afterMethod" finished-at="2024-11-24T21:32:52 WIB" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:TestNG@747edf66]" started-at="2024-11-24T21:32:52 WIB" name="afterMethod" finished-at="2024-11-24T21:32:52 WIB" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="scenarioTest2()[pri:0, instance:TestNG@747edf66]" started-at="2024-11-24T21:32:52 WIB" name="scenarioTest2" finished-at="2024-11-24T21:32:52 WIB" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- scenarioTest2 -->
        <test-method is-config="true" signature="setUpMethod()[pri:0, instance:TestNG@747edf66]" started-at="2024-11-24T21:32:52 WIB" name="setUpMethod" finished-at="2024-11-24T21:32:52 WIB" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMethod -->
        <test-method is-config="true" signature="setUpMethod()[pri:0, instance:TestNG@747edf66]" started-at="2024-11-24T21:32:52 WIB" name="setUpMethod" finished-at="2024-11-24T21:32:52 WIB" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMethod -->
        <test-method signature="scenarioTestDataProvider(java.lang.String,int)[pri:0, instance:TestNG@747edf66]" started-at="2024-11-24T21:32:52 WIB" name="scenarioTestDataProvider" data-provider="test1" finished-at="2024-11-24T21:32:52 WIB" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Albert]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[25]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- scenarioTestDataProvider -->
        <test-method signature="scenarioTestDataProvider(java.lang.String,int)[pri:0, instance:TestNG@747edf66]" started-at="2024-11-24T21:32:52 WIB" name="scenarioTestDataProvider" data-provider="test1" finished-at="2024-11-24T21:32:52 WIB" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Jeffry]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[26]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- scenarioTestDataProvider -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:TestNG@747edf66]" started-at="2024-11-24T21:32:52 WIB" name="afterMethod" finished-at="2024-11-24T21:32:52 WIB" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setUpMethod()[pri:0, instance:TestNG@747edf66]" started-at="2024-11-24T21:32:52 WIB" name="setUpMethod" finished-at="2024-11-24T21:32:52 WIB" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:TestNG@747edf66]" started-at="2024-11-24T21:32:52 WIB" name="afterMethod" finished-at="2024-11-24T21:32:52 WIB" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="scenarioTestParams(java.lang.String)[pri:0, instance:TestNG@747edf66]" started-at="2024-11-24T21:32:52 WIB" name="scenarioTestParams" finished-at="2024-11-24T21:32:52 WIB" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Bootcamp API Automation]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- scenarioTestParams -->
        <test-method is-config="true" signature="setUpMethod()[pri:0, instance:TestNG@747edf66]" started-at="2024-11-24T21:32:52 WIB" name="setUpMethod" finished-at="2024-11-24T21:32:52 WIB" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMethod -->
        <test-method is-config="true" signature="setUpMethod()[pri:0, instance:TestNG@747edf66]" started-at="2024-11-24T21:32:52 WIB" name="setUpMethod" finished-at="2024-11-24T21:32:52 WIB" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:TestNG@747edf66]" started-at="2024-11-24T21:32:52 WIB" name="afterMethod" finished-at="2024-11-24T21:32:52 WIB" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="test(java.lang.Integer)[pri:0, instance:TestNG@747edf66]" started-at="2024-11-24T21:32:52 WIB" name="test" data-provider="create" finished-at="2024-11-24T21:32:52 WIB" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[42]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:TestNG@747edf66]" started-at="2024-11-24T21:32:52 WIB" name="afterMethod" finished-at="2024-11-24T21:32:52 WIB" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setUpMethod()[pri:0, instance:TestNG@747edf66]" started-at="2024-11-24T21:32:52 WIB" name="setUpMethod" finished-at="2024-11-24T21:32:52 WIB" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:TestNG@747edf66]" started-at="2024-11-24T21:32:52 WIB" name="afterClass" finished-at="2024-11-24T21:32:52 WIB" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:TestNG@747edf66]" started-at="2024-11-24T21:32:52 WIB" name="afterMethod" finished-at="2024-11-24T21:32:52 WIB" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="dependScenarioTest()[pri:0, instance:TestNG@747edf66]" started-at="2024-11-24T21:32:52 WIB" name="dependScenarioTest" finished-at="2024-11-24T21:32:52 WIB" depends-on-methods="TestNG.dependMethod" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dependScenarioTest -->
      </class> <!-- TestNG -->
      <class name="ParallelTest">
        <test-method signature="testMethod1()[pri:0, instance:ParallelTest@1356d4d4]" started-at="2024-11-24T21:32:52 WIB" name="testMethod1" finished-at="2024-11-24T21:32:52 WIB" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod1 -->
        <test-method signature="testMethod3()[pri:0, instance:ParallelTest@1356d4d4]" started-at="2024-11-24T21:32:52 WIB" name="testMethod3" finished-at="2024-11-24T21:32:52 WIB" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod3 -->
        <test-method signature="testMethod2()[pri:0, instance:ParallelTest@1356d4d4]" started-at="2024-11-24T21:32:52 WIB" name="testMethod2" finished-at="2024-11-24T21:32:52 WIB" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod2 -->
        <test-method retried="true" signature="testRetry()[pri:0, instance:ParallelTest@1356d4d4]" started-at="2024-11-24T21:32:52 WIB" name="testRetry" finished-at="2024-11-24T21:32:52 WIB" duration-ms="0" status="SKIP">
          <exception class="java.lang.AssertionError">
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError
at ParallelTest.testRetry(ParallelTest.java:22)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:308)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:71)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:113)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRetry -->
        <test-method retried="true" signature="testRetry()[pri:0, instance:ParallelTest@1356d4d4]" started-at="2024-11-24T21:32:52 WIB" name="testRetry" finished-at="2024-11-24T21:32:52 WIB" duration-ms="0" status="SKIP">
          <exception class="java.lang.AssertionError">
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError
at ParallelTest.testRetry(ParallelTest.java:22)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.retryFailed(TestInvoker.java:213)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:58)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:308)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:71)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:113)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRetry -->
        <test-method signature="testRetry()[pri:0, instance:ParallelTest@1356d4d4]" started-at="2024-11-24T21:32:52 WIB" name="testRetry" finished-at="2024-11-24T21:32:52 WIB" duration-ms="0" status="FAIL">
          <exception class="java.lang.AssertionError">
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError
at ParallelTest.testRetry(ParallelTest.java:22)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.retryFailed(TestInvoker.java:213)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:58)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:308)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:71)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:113)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRetry -->
      </class> <!-- ParallelTest -->
    </test> <!-- MyTestGroup -->
  </suite> <!-- Annotation Execution Suite -->
</testng-results>
